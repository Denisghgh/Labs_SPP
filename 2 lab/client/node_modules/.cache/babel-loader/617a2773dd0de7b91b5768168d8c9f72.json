{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Denizka\\\\Documents\\\\MyFiles\\\\SPP\\\\\\u0412\\\\shmot-master\\\\2 lab\\\\client\\\\src\\\\components\\\\edit\\\\Edit.jsx\";\nimport React, { useState } from 'react';\nimport { editGet, editPost } from \"../../actions/user\";\nimport Input from \"../../utils/input/Input\";\n\nconst Edit = () => {\n  const [contentLoaded, setContentLoaded] = useState(false);\n  let [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [filePath, setFilePath] = useState(\"\");\n\n  function getParam(name) {\n    let regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n    let regex = new RegExp(regexS);\n    let results = regex.exec(window.location.href);\n    if (results == null) return \"\";else return results[1];\n  }\n\n  let shmotId = getParam('id');\n\n  const SelectChangeHandler = e => {\n    setType(e.target.value);\n  };\n\n  function fileUploadHandler(event) {\n    setFilePath(event.target.files);\n  }\n\n  if (!contentLoaded) {\n    setContentLoaded(true);\n    editGet(shmotId).then(shmot => {\n      setName(shmot.name);\n      setDescription(shmot.description);\n      setType(shmot.type);\n      setPrice(shmot.price);\n      setFilePath(shmot.filePath);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shmot-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shmot-form__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Edit your shmot here\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shmot-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: name,\n    setValue: setName,\n    type: \"text\",\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shmot-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: description,\n    setValue: setDescription,\n    type: \"text\",\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shmot-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"type\",\n    value: type,\n    onChange: SelectChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Other\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hoodie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"Hoodie\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"socks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Socks\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shmot-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: price,\n    setValue: setPrice,\n    type: \"number\",\n    placeholder: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shmot-form__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => fileUploadHandler(event),\n    type: \"file\",\n    placeholder: \"Add image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"shmot-form__button\",\n    onClick: event => editPost(event, shmotId, name, description, type, price, filePath),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Edit\")));\n};\n\nexport default Edit;","map":{"version":3,"sources":["C:/Users/Denizka/Documents/MyFiles/SPP/Ð’/shmot-master/2 lab/client/src/components/edit/Edit.jsx"],"names":["React","useState","editGet","editPost","Input","Edit","contentLoaded","setContentLoaded","name","setName","description","setDescription","type","setType","price","setPrice","filePath","setFilePath","getParam","regexS","regex","RegExp","results","exec","window","location","href","shmotId","SelectChangeHandler","e","target","value","fileUploadHandler","event","files","then","shmot"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {editGet, editPost} from \"../../actions/user\";\nimport Input from \"../../utils/input/Input\";\n\nconst Edit = () => {\n    const [contentLoaded, setContentLoaded] = useState(false);\n    let [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [type, setType] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [filePath, setFilePath] = useState(\"\")\n\n    function getParam( name ) {\n        let regexS = \"[\\\\?&]\"+name+\"=([^&#]*)\";\n        let regex = new RegExp( regexS );\n        let results = regex.exec( window.location.href );\n        if( results == null )\n            return \"\";\n        else\n            return results[1];\n    }\n    let shmotId = getParam( 'id' );\n\n    const SelectChangeHandler = (e) => {\n        setType(e.target.value);\n    }\n\n    function fileUploadHandler(event) {\n        setFilePath(event.target.files);\n    }\n    if (!contentLoaded) {\n        setContentLoaded(true);\n        editGet(shmotId).then(shmot => {\n            setName(shmot.name);\n            setDescription(shmot.description);\n            setType(shmot.type);\n            setPrice(shmot.price);\n            setFilePath(shmot.filePath);\n        })\n    }\n\n    return (\n        <div className=\"shmot-form\">\n            <form encType=\"multipart/form-data\">\n                <div className=\"shmot-form__title\">\n                    Edit your shmot here\n                </div>\n                <div className=\"shmot-form__input\">\n                    <Input value={name} setValue={setName} type=\"text\" placeholder=\"Name\"/>\n                </div>\n                <div className=\"shmot-form__input\">\n                    <Input value={description} setValue={setDescription} type=\"text\" placeholder=\"Description\"/>\n                </div>\n                <div className=\"shmot-form__input\">\n                    <label>\n                        <select name=\"type\" value={type} onChange={SelectChangeHandler}>\n                            <option value=\"other\">Other</option>\n                            <option value=\"hoodie\">Hoodie</option>\n                            <option value=\"socks\">Socks</option>\n                        </select>\n                    </label>\n                </div>\n                <div className=\"shmot-form__input\">\n                    <Input value={price} setValue={setPrice} type=\"number\" placeholder=\"Price\"/>\n                </div>\n                <div className=\"shmot-form__input\">\n                    <input onChange={(event)=> fileUploadHandler(event)} type=\"file\" placeholder=\"Add image\"/>\n                </div>\n                <button type=\"submit\" className=\"shmot-form__button\" onClick={(event) => editPost(event, shmotId, name, description, type, price, filePath)} >Edit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}